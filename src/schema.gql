# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  createdAt: String!
  updatedAt: String!
  id: Int!
  fullName: String
  email: String!
}

type PaginationMetadata {
  total: Int
  currentPage: Int
  itemsPerPage: Int
  totalPages: Int
}

type UserPaginationResultOutput {
  items: [User!]!
  meta: PaginationMetadata!
}

type ClassLevel {
  createdAt: String!
  updatedAt: String!
  id: Int!
  name: String
  code: String!
}

type ClassLevelPaginationResultOutput {
  items: [ClassLevel!]!
  meta: PaginationMetadata!
}

type Student {
  id: Int!
  firstName: String!
  lastName: String!
  dateOfBirth: DateTime
  gender: String
  email: String!
  phone: String
  address: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Group {
  """Example field (placeholder)"""
  exampleField: Int!
}

type Query {
  users(filter: FindAllUserInput!): UserPaginationResultOutput!
  user(id: Float!): User!
  classLevels(filter: findAllClassLevelInput!): ClassLevelPaginationResultOutput!
  classLevel(classLevelId: Int!): ClassLevel!
  student(id: Int!): Student!
  group(id: Int!): Group!
}

input FindAllUserInput {
  fullName: MatchInput
  password: MatchInput
  email: MatchInput
  pagination: PaginationInput!
}

input MatchInput {
  value: String!
  op: String!
}

input PaginationInput {
  limit: Int!
  page: Int!
}

input findAllClassLevelInput {
  name: MatchInput
  code: MatchInput
  pagination: PaginationInput!
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  removeUser(id: Int!): User!
  createClassLevel(createClassLevelInput: CreateClassLevelInput!): ClassLevel!
  updateClassLevel(updateClassLevelInput: UpdateClassLevelInput!): ClassLevel!
  removeClassLevel(classLevelId: Int!): ClassLevel!
  createStudent(createStudentInput: CreateStudentInput!): Student!
  updateStudent(updateStudentInput: UpdateStudentInput!): Student!
  removeStudent(id: Int!): Student!
  createGroup(createGroupInput: CreateGroupInput!): Group!
  updateGroup(updateGroupInput: UpdateGroupInput!): Group!
  removeGroup(id: Int!): Group!
}

input CreateUserInput {
  fullName: String
  email: String!
  password: String!
}

input UpdateUserInput {
  fullName: String
  email: String
  password: String
  id: Float!
}

input CreateClassLevelInput {
  name: String
  code: String!
}

input UpdateClassLevelInput {
  name: String
  code: String
  id: Int!
}

input CreateStudentInput {
  firstName: String!
  lastName: String!
  dateOfBirth: String
  gender: String
  email: String!
  phone: String
  address: String
}

input UpdateStudentInput {
  firstName: String
  lastName: String
  dateOfBirth: String
  gender: String
  email: String
  phone: String
  address: String
  id: Int!
}

input CreateGroupInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateGroupInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}